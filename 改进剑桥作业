{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4",
      "authorship_tag": "ABX9TyO7yzOw35OwPErM58aymXen",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/z-xylym/LSTM-learning/blob/main/%E6%94%B9%E8%BF%9B%E5%89%91%E6%A1%A5%E4%BD%9C%E4%B8%9A\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "td_sr1c-WS3v"
      },
      "outputs": [],
      "source": [
        "import torch\n",
        "import torch.nn as nn\n",
        "import torch.optim as optim\n",
        "from torch.utils.data import DataLoader\n",
        "from torchvision import datasets, transforms\n",
        "from torch.cuda.amp import GradScaler, autocast"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 数据预处理与增强\n",
        "transform = transforms.Compose([\n",
        "    transforms.RandomHorizontalFlip(),\n",
        "    transforms.RandomCrop(32, padding=4),\n",
        "    transforms.ToTensor(),\n",
        "    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n",
        "])\n",
        "\n",
        "trainset = datasets.CIFAR10(root='./data', train=True, download=True, transform=transform)\n",
        "testset = datasets.CIFAR10(root='./data', train=False, download=True, transform=transform)\n",
        "\n",
        "trainloader = DataLoader(trainset, batch_size=64, shuffle=True, num_workers=4)\n",
        "testloader = DataLoader(testset, batch_size=64, shuffle=False, num_workers=4)\n",
        "\n",
        "# 使用cuda设备\n",
        "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
        "print(\"Using device:\", device)\n",
        "\n",
        "# 定义模型\n",
        "class CIFAR10_CNN(nn.Module):\n",
        "    def __init__(self):\n",
        "        super(CIFAR10_CNN, self).__init__()\n",
        "\n",
        "        self.conv_layers = nn.Sequential(\n",
        "            nn.Conv2d(3, 64, kernel_size=3, padding=1),  # (32x32x3) → (32x32x64)\n",
        "            nn.ReLU(),\n",
        "            nn.Conv2d(64, 64, kernel_size=3, padding=1),\n",
        "            nn.ReLU(),\n",
        "            nn.MaxPool2d(2, 2),  # (32x32x64) → (16x16x64)\n",
        "\n",
        "            nn.Conv2d(64, 128, kernel_size=3, padding=1),\n",
        "            nn.ReLU(),\n",
        "            nn.Conv2d(128, 128, kernel_size=3, padding=1),\n",
        "            nn.ReLU(),\n",
        "            nn.MaxPool2d(2, 2),  # (16x16x128) → (8x8x128)\n",
        "\n",
        "            nn.Conv2d(128, 256, kernel_size=3, padding=1),\n",
        "            nn.ReLU(),\n",
        "            nn.Conv2d(256, 256, kernel_size=3, padding=1),\n",
        "            nn.ReLU(),\n",
        "            nn.MaxPool2d(2, 2)   # (8x8x256) → (4x4x256)\n",
        "        )\n",
        "\n",
        "        self.fc_layers = nn.Sequential(\n",
        "            nn.Flatten(),\n",
        "            nn.Linear(4*4*256, 512),\n",
        "            nn.ReLU(),\n",
        "            nn.Dropout(0.5),\n",
        "            nn.Linear(512, 10)  # 10 类输出\n",
        "        )\n",
        "\n",
        "    def forward(self, x):\n",
        "        x = self.conv_layers(x)\n",
        "        x = self.fc_layers(x)\n",
        "        return x\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4tVksAJKWUYv",
        "outputId": "95188354-23b1-401b-88e9-1dce10e9fbe7"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./data/cifar-10-python.tar.gz\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 170M/170M [00:03<00:00, 43.8MB/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Extracting ./data/cifar-10-python.tar.gz to ./data\n",
            "Files already downloaded and verified\n",
            "Using device: cuda\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/torch/utils/data/dataloader.py:617: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 2, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.\n",
            "  warnings.warn(\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 初始化模型\n",
        "model = CIFAR10_CNN().to(device)\n",
        "\n",
        "# 定义损失函数与优化器\n",
        "criterion = nn.CrossEntropyLoss()\n",
        "optimizer = optim.Adam(model.parameters(), lr=0.001)\n",
        "\n",
        "# 学习率调度器\n",
        "scheduler = optim.lr_scheduler.ReduceLROnPlateau(optimizer, 'min', patience=3, factor=0.5)\n",
        "\n",
        "# 混合精度训练\n",
        "scaler = GradScaler()\n",
        "\n",
        "# 训练函数\n",
        "def train_model(model, trainloader, testloader, epochs=15):\n",
        "    train_acc_list, test_acc_list, train_loss_list, test_loss_list = [], [], [], []\n",
        "\n",
        "    for epoch in range(epochs):\n",
        "        model.train()\n",
        "        running_loss, correct, total = 0.0, 0, 0\n",
        "\n",
        "        for images, labels in trainloader:\n",
        "            images, labels = images.to(device), labels.to(device)\n",
        "\n",
        "            optimizer.zero_grad()\n",
        "\n",
        "            # 混合精度训练\n",
        "            with autocast():\n",
        "                outputs = model(images)\n",
        "                loss = criterion(outputs, labels)\n",
        "\n",
        "            # 反向传播\n",
        "            scaler.scale(loss).backward()\n",
        "            scaler.step(optimizer)\n",
        "            scaler.update()\n",
        "\n",
        "            running_loss += loss.item()\n",
        "            _, predicted = torch.max(outputs, 1)\n",
        "            total += labels.size(0)\n",
        "            correct += (predicted == labels).sum().item()\n",
        "\n",
        "        train_loss = running_loss / len(trainloader)\n",
        "        train_acc = correct / total\n",
        "\n",
        "        # 计算测试集准确率\n",
        "        model.eval()\n",
        "        correct, total, test_loss = 0, 0, 0.0\n",
        "\n",
        "        with torch.no_grad():\n",
        "            for images, labels in testloader:\n",
        "                images, labels = images.to(device), labels.to(device)\n",
        "                outputs = model(images)\n",
        "                loss = criterion(outputs, labels)\n",
        "                test_loss += loss.item()\n",
        "\n",
        "                _, predicted = torch.max(outputs, 1)\n",
        "                total += labels.size(0)\n",
        "                correct += (predicted == labels).sum().item()\n",
        "\n",
        "        test_loss /= len(testloader)\n",
        "        test_acc = correct / total\n",
        "\n",
        "        # 更新学习率调度器\n",
        "        scheduler.step(test_loss)\n",
        "\n",
        "        # 记录损失和准确率\n",
        "        train_acc_list.append(train_acc)\n",
        "        test_acc_list.append(test_acc)\n",
        "        train_loss_list.append(train_loss)\n",
        "        test_loss_list.append(test_loss)\n",
        "\n",
        "        print(f\"Epoch [{epoch+1}/{epochs}], Train Loss: {train_loss:.4f}, Train Acc: {train_acc:.4f}, Test Loss: {test_loss:.4f}, Test Acc: {test_acc:.4f}\")\n",
        "\n",
        "    return train_acc_list, test_acc_list, train_loss_list, test_loss_list\n",
        "\n",
        "# 运行训练\n",
        "train_acc_list, test_acc_list, train_loss_list, test_loss_list = train_model(model, trainloader, testloader, epochs=30)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_MeLqAWtWXqT",
        "outputId": "964d82ff-d911-408e-fd55-ee6084099c08"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-3-78472de1522f>:12: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.\n",
            "  scaler = GradScaler()\n",
            "<ipython-input-3-78472de1522f>:28: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n",
            "  with autocast():\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch [1/30], Train Loss: 1.7743, Train Acc: 0.3380, Test Loss: 1.4440, Test Acc: 0.4580\n",
            "Epoch [2/30], Train Loss: 1.3371, Train Acc: 0.5122, Test Loss: 1.1723, Test Acc: 0.5729\n",
            "Epoch [3/30], Train Loss: 1.1054, Train Acc: 0.6050, Test Loss: 0.9523, Test Acc: 0.6592\n",
            "Epoch [4/30], Train Loss: 0.9460, Train Acc: 0.6668, Test Loss: 0.8967, Test Acc: 0.6827\n",
            "Epoch [5/30], Train Loss: 0.8507, Train Acc: 0.7030, Test Loss: 0.8089, Test Acc: 0.7180\n",
            "Epoch [6/30], Train Loss: 0.7895, Train Acc: 0.7283, Test Loss: 0.7587, Test Acc: 0.7363\n",
            "Epoch [7/30], Train Loss: 0.7347, Train Acc: 0.7470, Test Loss: 0.7029, Test Acc: 0.7602\n",
            "Epoch [8/30], Train Loss: 0.6897, Train Acc: 0.7627, Test Loss: 0.6766, Test Acc: 0.7707\n",
            "Epoch [9/30], Train Loss: 0.6602, Train Acc: 0.7753, Test Loss: 0.6870, Test Acc: 0.7692\n",
            "Epoch [10/30], Train Loss: 0.6404, Train Acc: 0.7820, Test Loss: 0.6467, Test Acc: 0.7775\n",
            "Epoch [11/30], Train Loss: 0.6088, Train Acc: 0.7930, Test Loss: 0.6380, Test Acc: 0.7835\n",
            "Epoch [12/30], Train Loss: 0.5907, Train Acc: 0.7975, Test Loss: 0.6435, Test Acc: 0.7894\n",
            "Epoch [13/30], Train Loss: 0.5744, Train Acc: 0.8031, Test Loss: 0.6445, Test Acc: 0.7837\n",
            "Epoch [14/30], Train Loss: 0.5609, Train Acc: 0.8066, Test Loss: 0.6075, Test Acc: 0.7936\n",
            "Epoch [15/30], Train Loss: 0.5434, Train Acc: 0.8147, Test Loss: 0.6038, Test Acc: 0.8020\n",
            "Epoch [16/30], Train Loss: 0.5441, Train Acc: 0.8159, Test Loss: 0.6264, Test Acc: 0.7964\n",
            "Epoch [17/30], Train Loss: 0.5324, Train Acc: 0.8195, Test Loss: 0.5670, Test Acc: 0.8135\n",
            "Epoch [18/30], Train Loss: 0.5168, Train Acc: 0.8226, Test Loss: 0.5948, Test Acc: 0.7987\n",
            "Epoch [19/30], Train Loss: 0.5092, Train Acc: 0.8262, Test Loss: 0.5637, Test Acc: 0.8102\n",
            "Epoch [20/30], Train Loss: 0.4957, Train Acc: 0.8293, Test Loss: 0.5876, Test Acc: 0.8075\n",
            "Epoch [21/30], Train Loss: 0.4979, Train Acc: 0.8302, Test Loss: 0.5891, Test Acc: 0.8010\n",
            "Epoch [22/30], Train Loss: 0.4839, Train Acc: 0.8340, Test Loss: 0.5663, Test Acc: 0.8140\n",
            "Epoch [23/30], Train Loss: 0.4784, Train Acc: 0.8365, Test Loss: 0.5959, Test Acc: 0.8065\n",
            "Epoch [24/30], Train Loss: 0.4088, Train Acc: 0.8607, Test Loss: 0.5307, Test Acc: 0.8270\n",
            "Epoch [25/30], Train Loss: 0.3905, Train Acc: 0.8657, Test Loss: 0.5216, Test Acc: 0.8345\n",
            "Epoch [26/30], Train Loss: 0.3791, Train Acc: 0.8706, Test Loss: 0.5110, Test Acc: 0.8388\n",
            "Epoch [27/30], Train Loss: 0.3722, Train Acc: 0.8728, Test Loss: 0.5251, Test Acc: 0.8325\n",
            "Epoch [28/30], Train Loss: 0.3641, Train Acc: 0.8747, Test Loss: 0.5207, Test Acc: 0.8367\n",
            "Epoch [29/30], Train Loss: 0.3594, Train Acc: 0.8756, Test Loss: 0.5012, Test Acc: 0.8381\n",
            "Epoch [30/30], Train Loss: 0.3521, Train Acc: 0.8779, Test Loss: 0.5209, Test Acc: 0.8400\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# 训练 & 测试准确率曲线\n",
        "plt.figure(figsize=(10,5))\n",
        "plt.plot(train_acc_list, label='Train Accuracy')\n",
        "plt.plot(test_acc_list, label='Test Accuracy')\n",
        "plt.xlabel('Epochs')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.legend()\n",
        "plt.title(\"Train vs Test Accuracy\")\n",
        "plt.show()\n",
        "\n",
        "# 训练 & 测试损失曲线\n",
        "plt.figure(figsize=(10,5))\n",
        "plt.plot(train_loss_list, label='Train Loss')\n",
        "plt.plot(test_loss_list, label='Test Loss')\n",
        "plt.xlabel('Epochs')\n",
        "plt.ylabel('Loss')\n",
        "plt.legend()\n",
        "plt.title(\"Train vs Test Loss\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 957
        },
        "id": "K-h4mTAvWxM5",
        "outputId": "c8dac3c4-277b-41fd-ebc3-baf9a93f8fff"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def evaluate_model(model, testloader):\n",
        "    model.eval()\n",
        "    correct, total = 0, 0\n",
        "\n",
        "    with torch.no_grad():\n",
        "        for images, labels in testloader:\n",
        "            images, labels = images.to(device), labels.to(device)\n",
        "            outputs = model(images)\n",
        "            _, predicted = torch.max(outputs, 1)\n",
        "            total += labels.size(0)\n",
        "            correct += (predicted == labels).sum().item()\n",
        "\n",
        "    acc = 100 * correct / total\n",
        "    print(f'Final Test Accuracy: {acc:.2f}%')\n",
        "    return acc\n",
        "\n",
        "evaluate_model(model, testloader)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nQQ7Qa71W57L",
        "outputId": "474e89e3-f52a-479d-9c76-93ac2121275f"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Final Test Accuracy: 84.07%\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "84.07"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    }
  ]
}